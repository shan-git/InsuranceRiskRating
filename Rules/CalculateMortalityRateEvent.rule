/**
 * @description Event for Caculating Mortality Rate
 * @author 01HW343916
 */
rule Rules.CalculateMortalityRateEvent {
	attribute {
		priority = 5;
		forwardChain = true;
	}
	declare {
		
		Events.CalculateRiskRating calculateriskrating;
		Concepts.Application applicationreceived;
		Concepts.RiskLimits riskLimits;
	}
	when {
		applicationreceived@extId == XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$calculateriskrating/payload/xsd2:CalculateRiskRatingInput/xsd2:ApplicationId</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.tcs.com/dess/casestudy/MortalityRiskRatingClient/SharedResources/Schemas/InsuranceApplicationSchema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>calculateriskrating</variable>\n    </variables>\n</xpath>");
	}
	then {
		
		System.debugOut("Calculate Mortality Rule Started");
		
		Object[] arguments = {calculateriskrating, applicationreceived,riskLimits};
		VRF.invokeVRFImplByName("/Virtual_RuleFunctions/CalculateMoratlityRate","MortalityCalculator",arguments);
		
		System.debugOut("Adverse Factor : " + applicationreceived.AdverseFactor);
		System.debugOut("Favourable Factor : " + applicationreceived.FavourableFactor);
		
		applicationreceived.NetRiskRating = applicationreceived.AdverseFactor - applicationreceived.FavourableFactor;
		
		System.debugOut("Net Risk Rating : " + applicationreceived.NetRiskRating);
		
		Event.consumeEvent(calculateriskrating);
		
		
	}
}